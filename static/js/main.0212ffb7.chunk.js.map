{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["toSlicedUTCDate","date","Date","toUTCString","slice","Clock","state","currentTime","timerId","componentDidMount","setState","window","setInterval","console","info","componentDidUpdate","prevProps","clockName","props","debug","componentWillUnmount","clearInterval","this","className","Component","getRandomName","value","now","toString","App","hasClock","handleContextMenuClick","event","preventDefault","handleClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"qMAWMA,EAAkB,WAAsC,IAArCC,EAAoC,uDAAvB,IAAIC,KACxC,OAAOD,EAAKE,cAAcC,OAAO,IAAK,IAG3BC,EAAb,4MACEC,MAAQ,CACNC,YAAaP,IACbQ,QAAS,GAHb,EAMEC,kBAAoB,WAClB,EAAKC,SAAS,CACZF,QAASG,OAAOC,aAAY,WAC1B,EAAKF,SAAS,CACZH,YAAaP,MAIfa,QAAQC,KAAKd,OACZ,QAfT,EAmBEe,mBAAqB,SAACC,GAChBA,EAAUC,YAAc,EAAKC,MAAMD,WAErCJ,QAAQM,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwD,EAAKC,MAAMD,aAtBzE,EA0BEG,qBAAuB,WACrBT,OAAOU,cAAc,EAAKf,MAAME,UA3BpC,4CA8BE,WACE,IAAQS,EAAcK,KAAKJ,MAAnBD,UACAV,EAAgBe,KAAKhB,MAArBC,YAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGN,IAGF,YAED,sBAAMM,UAAU,cAAhB,SACGhB,WA3CX,GAA2BiB,aCLrBC,G,MAAgB,WACpB,IAAMC,EAAQxB,KAAKyB,MAAMC,WAAWxB,OAAO,GAE3C,MAAM,SAAN,OAAgBsB,KAGLG,EAAb,4MACEvB,MAAQ,CACNW,UAAW,UACXa,UAAU,EACVtB,QAAS,GAJb,EA2BEuB,uBAAyB,SAACC,GACxBA,EAAMC,iBAEN,EAAKvB,SAAS,CACZoB,UAAU,KA/BhB,EAmCEI,YAAc,WACZ,EAAKxB,SAAS,CACZoB,UAAU,KArChB,uDAOE,WAAqB,IAAD,OAClBR,KAAKZ,SAAS,CACZF,QAASG,OAAOC,aAAY,WAC1B,EAAKF,SAAS,CACZO,UAAWQ,QAEZ,QAGLU,SAASC,iBAAiB,cAAed,KAAKS,wBAC9CI,SAASC,iBAAiB,QAASd,KAAKY,eAjB5C,kCAoBE,WACEvB,OAAOU,cAAcC,KAAKhB,MAAME,SAEhC2B,SAASE,oBAAoB,QAASf,KAAKY,aAC3CC,SAASE,oBAAoB,cAAef,KAAKS,0BAxBrD,oBAyCE,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECD,KAAKhB,MAAMwB,UACV,cAAC,EAAD,CAAOb,UAAWK,KAAKhB,MAAMW,mBA/CvC,GAAyBO,aCbzBc,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.0212ffb7.chunk.js","sourcesContent":["import { Component } from 'react';\n\ninterface Props {\n  clockName: string\n}\n\ninterface State {\n  currentTime: string\n  timerId: number\n}\n\nconst toSlicedUTCDate = (date: Date = new Date()): string => {\n  return date.toUTCString().slice(-12, -4);\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    currentTime: toSlicedUTCDate(),\n    timerId: 0,\n  };\n\n  componentDidMount = () => {\n    this.setState({\n      timerId: window.setInterval(() => {\n        this.setState({\n          currentTime: toSlicedUTCDate(),\n        });\n\n        // eslint-disable-next-line no-console\n        console.info(toSlicedUTCDate());\n      }, 1000),\n    });\n  };\n\n  componentDidUpdate = (prevProps: Readonly<Props>) => {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  };\n\n  componentWillUnmount = () => {\n    window.clearInterval(this.state.timerId);\n  };\n\n  render() {\n    const { clockName } = this.props;\n    const { currentTime } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\ninterface State {\n  clockName: string\n  hasClock: boolean\n  timerId: number\n}\n\nconst getRandomName = (): string => {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n    timerId: 0,\n  };\n\n  componentDidMount() {\n    this.setState({\n      timerId: window.setInterval(() => {\n        this.setState({\n          clockName: getRandomName(),\n        });\n      }, 3300),\n    });\n\n    document.addEventListener('contextmenu', this.handleContextMenuClick);\n    document.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.state.timerId);\n\n    document.removeEventListener('click', this.handleClick);\n    document.removeEventListener('contextmenu', this.handleContextMenuClick);\n  }\n\n  handleContextMenuClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({\n      hasClock: false,\n    });\n  };\n\n  handleClick = () => {\n    this.setState({\n      hasClock: true,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && (\n          <Clock clockName={this.state.clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}