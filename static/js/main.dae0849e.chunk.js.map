{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["convertToSlicedUTCDate","date","Date","toUTCString","slice","Clock","state","currentTime","timerId","componentDidMount","window","setInterval","setState","console","info","componentDidUpdate","prevProps","name","props","debug","componentWillUnmount","clearInterval","this","className","Component","getRandomName","value","now","toString","App","createTheme","palette","background","default","clockName","hasClock","handleContextMenuClick","event","preventDefault","handleClick","getColorDigits","handleColor","colorDigits","color","primaryColor","log","text","primary","document","addEventListener","removeEventListener","ThemeProvider","theme","CssBaseline","Box","sx","textAlign","border","borderColor","padding","margin","ReactDOM","render","getElementById"],"mappings":"0OAUMA,EAAyB,WAAsC,IAArCC,EAAoC,uDAAvB,IAAIC,KAC/C,OAAOD,EAAKE,cAAcC,OAAO,IAAK,IAG3BC,EAAb,4MACEC,MAAyB,CACvBC,YAAaP,KAFjB,EAKEQ,QAAU,EALZ,EAOEC,kBAAoB,WAClB,EAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZL,YAAaP,MAIfa,QAAQC,KAAKd,OACZ,MAfP,EAkBEe,mBAAqB,SAACC,GAChBA,EAAUC,OAAS,EAAKC,MAAMD,MAEhCJ,QAAQM,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmD,EAAKC,MAAMD,QArBpE,EAyBEG,qBAAuB,WACrBV,OAAOW,cAAc,EAAKb,UA1B9B,4CA6BE,WACE,IAAQS,EAASK,KAAKJ,MAAdD,KACAV,EAAgBe,KAAKhB,MAArBC,YAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGN,IAGF,YAED,sBAAMM,UAAU,cAAhB,SACGhB,WA1CX,GAA2BiB,aCErBC,G,MAAgB,WACpB,IAAMC,EAAQxB,KAAKyB,MAAMC,WAAWxB,OAAO,GAE3C,MAAM,SAAN,OAAgBsB,KAWLG,GARaC,YAAY,CACpCC,QAAS,CACPC,WAAY,CACVC,QAAS,cAKf,4MACE3B,MAAyB,CACvB4B,UAAW,UACXC,UAAU,GAHd,EAME3B,QAAU,EANZ,EA0BE4B,uBAAyB,SAACC,GACxBA,EAAMC,iBAEN,EAAK1B,SAAS,CACZuB,UAAU,KA9BhB,EAkCEI,YAAc,WACZ,EAAK3B,SAAS,CACZuB,UAAU,KApChB,EAwCEK,eAAiB,WACf,OAAO,EAAKlC,MAAM4B,UAAU9B,MAAM,IAzCtC,EA4CEqC,YAAc,WACZ,IAAMC,EAAc,EAAKF,iBACnBG,EAAK,aAASD,GACdE,GAAgBF,EAAc,IAAO,UAAY,UAiBvD,OAdA7B,QAAQgC,IAAI,QAASF,GAGPb,YAAY,CACxBC,QAAS,CACPC,WAAY,CACVC,QAASU,GAEXG,KAAM,CACJC,QAASH,OA3DnB,uDAQE,WAAqB,IAAD,OAClBtB,KAAKd,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZsB,UAAWT,QAEZ,MAEHuB,SAASC,iBAAiB,cAAe3B,KAAKc,wBAC9CY,SAASC,iBAAiB,QAAS3B,KAAKiB,eAhB5C,kCAmBE,WACE7B,OAAOW,cAAcC,KAAKd,SAE1BwC,SAASE,oBAAoB,QAAS5B,KAAKiB,aAC3CS,SAASE,oBAAoB,cAAe5B,KAAKc,0BAvBrD,oBAmEE,WACE,MAGId,KAAKhB,MAFP6B,EADF,EACEA,SACAD,EAFF,EAEEA,UAGF,OACE,qBAAKX,UAAU,MAAf,SACE,eAAC4B,EAAA,EAAD,CAAeC,MAAO9B,KAAKmB,cAA3B,UACE,cAACY,EAAA,EAAD,IAEA,eAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,SACXC,OAAQ,EACRC,aAAcpC,KAAKkB,iBAAmB,IAClC,UAAY,UAChBmB,QAAS,GACTC,OAAQ,IAPZ,UAUE,6CAECzB,GAAa,cAAC,EAAD,CAAOlB,KAAMiB,gBA1FvC,GAAyBV,cC3BzBqC,IAASC,OACP,cAAC,EAAD,IACAd,SAASe,eAAe,W","file":"static/js/main.dae0849e.chunk.js","sourcesContent":["import { Component } from 'react';\n\ninterface Props {\n  name: string\n}\n\ninterface State {\n  currentTime: string\n}\n\nconst convertToSlicedUTCDate = (date: Date = new Date()): string => {\n  return date.toUTCString().slice(-12, -4);\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    currentTime: convertToSlicedUTCDate(),\n  };\n\n  timerId = 0;\n\n  componentDidMount = () => {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        currentTime: convertToSlicedUTCDate(),\n      });\n\n      // eslint-disable-next-line no-console\n      console.info(convertToSlicedUTCDate());\n    }, 1000);\n  };\n\n  componentDidUpdate = (prevProps: Readonly<Props>) => {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  };\n\n  componentWillUnmount = () => {\n    window.clearInterval(this.timerId);\n  };\n\n  render() {\n    const { name } = this.props;\n    const { currentTime } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport {\n  Box,\n} from '@mui/material';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\n\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\ninterface State {\n  clockName: string\n  hasClock: boolean\n}\n\nconst getRandomName = (): string => {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n};\n\nexport const themeLight = createTheme({\n  palette: {\n    background: {\n      default: '#e4f0e2',\n    },\n  },\n});\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleContextMenuClick);\n    document.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n\n    document.removeEventListener('click', this.handleClick);\n    document.removeEventListener('contextmenu', this.handleContextMenuClick);\n  }\n\n  handleContextMenuClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({\n      hasClock: false,\n    });\n  };\n\n  handleClick = () => {\n    this.setState({\n      hasClock: true,\n    });\n  };\n\n  getColorDigits = () => {\n    return this.state.clockName.slice(6);\n  };\n\n  handleColor = () => {\n    const colorDigits = this.getColorDigits();\n    const color = `#ff${colorDigits}`;\n    const primaryColor = +colorDigits < 4000 ? '#ffffff' : '#000000';\n\n    // eslint-disable-next-line no-console\n    console.log('color', color);\n\n    // changes theme according to last 4 clock name digits\n    const theme = createTheme({\n      palette: {\n        background: {\n          default: color,\n        },\n        text: {\n          primary: primaryColor,\n        },\n      },\n    });\n\n    return theme;\n  };\n\n  render() {\n    const {\n      hasClock,\n      clockName,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={this.handleColor()}>\n          <CssBaseline />\n\n          <Box\n            sx={{\n              textAlign: 'center',\n              border: 5,\n              borderColor: +this.getColorDigits() < 4000\n                ? '#ffffff' : '#000000',\n              padding: 20,\n              margin: 20,\n            }}\n          >\n            <h1>React clock</h1>\n\n            {hasClock && (<Clock name={clockName} />)}\n          </Box>\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}